<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Js | 小黄鸡]]></title>
  <link href="http://hunter222.github.io/blog/categories/js/atom.xml" rel="self"/>
  <link href="http://hunter222.github.io/"/>
  <updated>2016-08-31T08:50:53+08:00</updated>
  <id>http://hunter222.github.io/</id>
  <author>
    <name><![CDATA[小黄鸡]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ajax对xml接收]]></title>
    <link href="http://hunter222.github.io/blog/2016/07/27/ajax-xml/"/>
    <updated>2016-07-27T17:19:26+08:00</updated>
    <id>http://hunter222.github.io/blog/2016/07/27/ajax-xml</id>
    <content type="html"><![CDATA[<h5>ajax负责请求xml和接收xml信息，dom负责处理xml信息</h5>

<p>效果：
<img src="http://ww2.sinaimg.cn/mw690/710059dfgw1f7c5fj7vwgj20h307ign8.jpg" alt="haha" /></p>

<p>代码如下：</p>

<pre><code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;新建网页&lt;/title&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;meta name="description" content="" /&gt;
        &lt;meta name="keywords" content="" /&gt;
        &lt;script type="text/javascript"&gt;
        function f1(){
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function(){
                if(xhr.readyState==4){    
                    var xmldom = xhr.responseXML;//这里有点不同
                    var std = xmldom.getElementsByTagName('student');                 
                    var s = "";
                    for(var i=0; i&lt;std.length; i++){
                        var nm = std[i].getElementsByTagName('name')[0].innerHTML;
                        var age = std[i].getElementsByTagName('age')[0].firstChild.wholeText;
                        var addr = std[i].getElementsByTagName('addr')[0].innerHTML;                       
                        s += "名称："+nm+"--年龄："+age+"--地址："+addr+"&lt;br /&gt;";
                    }
                    document.body.innerHTML += s;
                }
            }
            xhr.open('get','./stu.xml');
            xhr.send(null);
        }
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h2&gt;ajax+javascript实现对xml处理&lt;/h2&gt;
        &lt;input type="button" value="处理" onclick="f1()" /&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>xml代码（stu.xml）：
<code>
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;students&gt;
    &lt;student&gt;
        &lt;name&gt;张三&lt;/name&gt;
        &lt;age&gt;22&lt;/age&gt;
        &lt;addr&gt;河北&lt;/addr&gt;
    &lt;/student&gt;
    &lt;student&gt;
        &lt;name&gt;苏您退&lt;/name&gt;
        &lt;age&gt;21&lt;/age&gt;
        &lt;addr&gt;河南&lt;/addr&gt;
    &lt;/student&gt;
    &lt;student&gt;
        &lt;name&gt;李阳&lt;/name&gt;
        &lt;age&gt;44&lt;/age&gt;
        &lt;addr&gt;山东&lt;/addr&gt;
    &lt;/student&gt;
&lt;/students&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ajax的无刷新分页显示]]></title>
    <link href="http://hunter222.github.io/blog/2016/07/27/ajax-page/"/>
    <updated>2016-07-27T17:19:26+08:00</updated>
    <id>http://hunter222.github.io/blog/2016/07/27/ajax-page</id>
    <content type="html"><![CDATA[<h5>1.具体实现</h5>

<p>记录总条数</p>

<p>每页显示条数</p>

<p>总页数：向上取整(总条数/每页显示条数)</p>

<p>limit  偏移量((当前页码-1)*每页条数),长度;</p>

<p><a href="http://%E7%BD%91%E5%9D%80/data.php?page=1">http://%E7%BD%91%E5%9D%80/data.php?page=1</a>  (limit 0,7)</p>

<p><a href="http://%E7%BD%91%E5%9D%80/data.php?page=2">http://%E7%BD%91%E5%9D%80/data.php?page=2</a>  (limit 7,7)</p>

<p><a href="http://%E7%BD%91%E5%9D%80/data.php?page=3">http://%E7%BD%91%E5%9D%80/data.php?page=3</a>  (limit 14,7)</p>

<p>ajax对象.open(‘get’,地址<a href="http://%E7%BD%91%E5%9D%80/data.php?page=2">http://%E7%BD%91%E5%9D%80/data.php?page=2</a>);</p>

<p>利用ajax无刷新方式获得第2页信息</p>

<h5>效果图：</h5>

<p><img src="http://ww2.sinaimg.cn/mw690/710059dfgw1f7c5fijiy3j20t40c7gpy.jpg" alt="photo" /></p>

<h5>2.代码</h5>

<p>分页代码：
<code>
&lt;?php
//传统分页效果实现
//连接数据库，获得数据，做分页显示
header("content-type:text/html;charset=utf-8");
$link = mysqli_connect('localhost','root','123456','shop');
//mysqli_select_db('shop', $link);
mysqli_query($link, 'set names utf8');
echo &lt;&lt;&lt;eof
    &lt;style type="text/css"&gt;
        table {width:700px; border:1px solid black; margin:auto; border-collapse:collapse;}
        td {border:1px solid black; }
    &lt;/style&gt;
    &lt;table&gt;
        &lt;tr style='font-weight:bold'&gt;&lt;td&gt;序号&lt;/td&gt;&lt;td&gt;名称&lt;/td&gt;&lt;td&gt;价格&lt;/td&gt;&lt;td&gt;数量&lt;/td&gt;&lt;td&gt;重量&lt;/td&gt;&lt;/tr&gt;
eof;
//① 引入分页类
include "./page.class.php";
//② 获得总条数、每页显示条数
$sql = "select * from sw_goods";
$qry = mysqli_query($link,$sql);
$total = mysqli_num_rows($qry); //总条数
$per = 7;//每页条数
//③ 实例化分页类对象
$page = new Page($total, $per);
//④ 设置sql语句获得每页信息
//$page-&gt;limit:分页类会根据当前页码参数自动把 "limit 偏移量,长度" 信息给拼装好
$sql3 = "select * from sw_goods order by goods_id ".$page-&gt;limit;
$qry3 = mysqli_query($link,$sql3);
//⑤ 获得页码列表信息
$page_list = $page -&gt; fpage(array(3,4,5,6,7,8));
$page_num = isset($_GET['page'])?$_GET['page']:1;
$num = ($page_num-1)*$per+1;
while($rst3 = mysqli_fetch_assoc($qry3)){
    printf("&lt;tr&gt;");
    printf("&lt;td&gt;%d&lt;/td&gt;",$num);
    printf("&lt;td&gt;%s&lt;/td&gt;",$rst3['goods_name']);
    printf("&lt;td&gt;%s&lt;/td&gt;",$rst3['goods_price']);
    printf("&lt;td&gt;%d&lt;/td&gt;",$rst3['goods_number']);
    printf("&lt;td&gt;%d&lt;/td&gt;",$rst3['goods_weight']);
    printf("&lt;/tr&gt;");
    $num++;
}
printf("&lt;tr&gt;&lt;td colspan='5'&gt;%s&lt;/td&gt;&lt;/tr&gt;",$page_list);
echo "&lt;/table&gt;";
</code>
ajax代码：
<code>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;新建网页&lt;/title&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;meta name="description" content="" /&gt;
        &lt;meta name="keywords" content="" /&gt;
        &lt;script type="text/javascript"&gt;
        //函数封装，实现ajax获取分页信息
        function showpage(url){
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function(){
                if(xhr.readyState==4){
                    document.getElementById('result').innerHTML = xhr.responseText;
                }
            }
            xhr.open('get',url);
            xhr.send(null);
        }
        window.onload = function(){
            showpage('./data.php');
        }
        &lt;/script&gt;
        &lt;style type="text/css"&gt;
        h2,div {width:700px; margin:auto;}
        h2 {text-align:center;}
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h2&gt;ajax无刷新分页&lt;/h2&gt;
        &lt;div id="result"&gt;&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code>
用于分页包装好的代码：
<code>
&lt;?php
    class Page {
        private $total; //数据表中总记录数
        private $listRows; //每页显示行数
        private $limit;
        private $uri;
        private $pageNum; //页数
        private $config=array('header'=&gt;"个记录", "prev"=&gt;"上一页", "next"=&gt;"下一页", "first"=&gt;"首 页", "last"=&gt;"尾 页");
        private $listNum=8;
        /*
         * $total
         * $listRows
         */
        public function __construct($total, $listRows=10, $pa=""){
            $this-&gt;total=$total;
            $this-&gt;listRows=$listRows;
            $this-&gt;uri=$this-&gt;getUri($pa);
            $this-&gt;page=!empty($_GET["page"]) ? $_GET["page"] : 1;
            $this-&gt;pageNum=ceil($this-&gt;total/$this-&gt;listRows);
            $this-&gt;limit=$this-&gt;setLimit();
        }
        private function setLimit(){
            return "Limit ".($this-&gt;page-1)*$this-&gt;listRows.", {$this-&gt;listRows}";
        }
        private function getUri($pa){
            $url=$_SERVER["REQUEST_URI"].(strpos($_SERVER["REQUEST_URI"], '?')?'':"?").$pa;
            $parse=parse_url($url);
            if(isset($parse["query"])){
                parse_str($parse['query'],$params);
                unset($params["page"]);
                $url=$parse['path'].'?'.http_build_query($params);              
            }
            return $url;
        }
        function __get($args){
            if($args=="limit")
                return $this-&gt;limit;
            else
                return null;
        }
        private function start(){
            if($this-&gt;total==0)
                return 0;
            else
                return ($this-&gt;page-1)*$this-&gt;listRows+1;
        }
        private function end(){
            return min($this-&gt;page*$this-&gt;listRows,$this-&gt;total);
        }
        private function first(){
            $html = "";
            if($this-&gt;page==1)
                $html.='';
            else
                $html.="&amp;nbsp;&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page=1\")'&gt;{$this-&gt;config["first"]}&lt;/a&gt;&amp;nbsp;&amp;nbsp;";
            return $html;
        }
        private function prev(){
            $html = "";
            if($this-&gt;page==1)
                $html.='';
            else
                $html.="&amp;nbsp;&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page=".($this-&gt;page-1)."\")'&gt;{$this-&gt;config["prev"]}&lt;/a&gt;&amp;nbsp;&amp;nbsp;";
            return $html;
        }
        private function pageList(){
            $linkPage="";       
            $inum=floor($this-&gt;listNum/2);  
            for($i=$inum; $i&gt;=1; $i--){
                $page=$this-&gt;page-$i;
                if($page&lt;1)
                    continue;
                //$linkPage.="&amp;nbsp;&lt;a href='{$this-&gt;uri}&amp;page={$page}'&gt;{$page}&lt;/a&gt;&amp;nbsp;";
                $linkPage.="&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page={$page}\")'&gt;{$page}&lt;/a&gt;&amp;nbsp;";
            }   
            $linkPage.="&amp;nbsp;{$this-&gt;page}&amp;nbsp;";
            for($i=1; $i&lt;=$inum; $i++){
                $page=$this-&gt;page+$i;
                if($page&lt;=$this-&gt;pageNum){
                    //$linkPage.="&amp;nbsp;&lt;a href='{$this-&gt;uri}&amp;page={$page}'&gt;{$page}&lt;/a&gt;&amp;nbsp;";
                    //把a超链接变为是showpage函数(ajax执行)调用
                    $linkPage.="&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page={$page}\")'&gt;{$page}&lt;/a&gt;&amp;nbsp;";
                }else{
                    break;
                }
            }
            return $linkPage;
        }
        private function next(){
            $html = "";
            if($this-&gt;page==$this-&gt;pageNum)
                $html.='';
            else
                $html.="&amp;nbsp;&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page=".($this-&gt;page+1)."\")'&gt;{$this-&gt;config["next"]}&lt;/a&gt;&amp;nbsp;&amp;nbsp;";
            return $html;
        }
        private function last(){
            $html = "";
            if($this-&gt;page==$this-&gt;pageNum)
                $html.='';
            else
                $html.="&amp;nbsp;&amp;nbsp;&lt;a href='javascript:showpage(\"{$this-&gt;uri}&amp;page=".($this-&gt;pageNum)."\")'&gt;{$this-&gt;config["last"]}&lt;/a&gt;&amp;nbsp;&amp;nbsp;";
            return $html;
        }
        private function goPage(){
            return '&amp;nbsp;&amp;nbsp;&lt;input type="text" onkeydown="javascript:if(event.keyCode==13){var page=(this.value&gt;'.$this-&gt;pageNum.')?'.$this-&gt;pageNum.':this.value;showpage(\''.$this-&gt;uri.'&amp;page=\'+page+\'\')}" value="'.$this-&gt;page.'" style="width:25px"&gt;&lt;input type="button" value="GO" onclick="javascript:var page=(this.previousSibling.value&gt;'.$this-&gt;pageNum.')?'.$this-&gt;pageNum.':this.previousSibling.value;showpage(\''.$this-&gt;uri.'&amp;page=\'+page+\'\')"&gt;&amp;nbsp;&amp;nbsp;';
            //return '&amp;nbsp;&amp;nbsp;&lt;input type="text" onkeydown="javascript:if(event.keyCode==13){var page=(this.value&gt;'.$this-&gt;pageNum.')?'.$this-&gt;pageNum.':this.value;location=\''.$this-&gt;uri.'&amp;page=\'+page+\'\'}" value="'.$this-&gt;page.'" style="width:25px"&gt;&lt;input type="button" value="GO" onclick="javascript:var page=(this.previousSibling.value&gt;'.$this-&gt;pageNum.')?'.$this-&gt;pageNum.':this.previousSibling.value;location=\''.$this-&gt;uri.'&amp;page=\'+page+\'\'"&gt;&amp;nbsp;&amp;nbsp;';
        }
        function fpage($display=array(0,1,2,3,4,5,6,7,8)){
            $html[0]="&amp;nbsp;&amp;nbsp;共有&lt;b&gt;{$this-&gt;total}&lt;/b&gt;{$this-&gt;config["header"]}&amp;nbsp;&amp;nbsp;";
            $html[1]="&amp;nbsp;&amp;nbsp;每页显示&lt;b&gt;".($this-&gt;end()-$this-&gt;start()+1)."&lt;/b&gt;条，本页&lt;b&gt;{$this-&gt;start()}-{$this-&gt;end()}&lt;/b&gt;条&amp;nbsp;&amp;nbsp;";
            $html[2]="&amp;nbsp;&amp;nbsp;&lt;b&gt;{$this-&gt;page}/{$this-&gt;pageNum}&lt;/b&gt;页&amp;nbsp;&amp;nbsp;";        
            $html[3]=$this-&gt;first();
            $html[4]=$this-&gt;prev();
            $html[5]=$this-&gt;pageList();
            $html[6]=$this-&gt;next();
            $html[7]=$this-&gt;last();
            $html[8]=$this-&gt;goPage();
            $fpage='';
            foreach($display as $index){
                $fpage.=$html[$index];
            }
            return $fpage;
        }
    }
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ajax的get和post请求方式示例]]></title>
    <link href="http://hunter222.github.io/blog/2016/07/27/ajax-get-post/"/>
    <updated>2016-07-27T17:19:26+08:00</updated>
    <id>http://hunter222.github.io/blog/2016/07/27/ajax-get-post</id>
    <content type="html"><![CDATA[<h5>1.两者的不同:</h5>

<p>① 给服务器传递数据量，get最多是2k
                       post原则没有限制，php.ini对其限制为8M</p>

<p>② 安全方面，post传递数据较安全</p>

<p>③ 传递数据的形式不一样
    get方式在url地址后边以请求字符串形式传递参数
    <a href="http://%E7%BD%91%E5%9D%80/index.php?name=tom&amp;age=23&amp;addr=beijing">http://%E7%BD%91%E5%9D%80/index.php?name=tom&amp;age=23&amp;addr=beijing</a>
    蓝色部分就是请求字符串，就是一些“名-值”对，中间使用&amp;符号连接。
    post方式是把form表单的数据给请求出来以xml形式传递给服务器</p>

<h5>2.处理特殊符号函数：</h5>

<p>在浏览器的地址栏里边传递一些特殊符号信息，会被误解，例如 &amp;  =  空格  中文。</p>

<p>在php里边可以函数函数 urlencode()/urldecode()对特殊符号进行编码、反编码处理
(url_encode()可以把中文转变为浏览器可以识别的信息。转变之后的信息具体为%号后接两个十六进制数)</p>

<p>在javascript里边可以通过encodeURIComponent ()对特殊符号等信息进行编码。
经过以上红色函数编码的内容在服务器端可以正常接收，不需要反编码。</p>

<h5>3.ajax总结：</h5>

<p>1.ajax对象创建</p>

<p> var xhr = new XMLHttpRequest();</p>

<p> var xhr = new ActiveXObject(‘Msxml2.XMLHTTP.6.0’);</p>

<p>2.ajax对象属性</p>

<p>readyState</p>

<p>responseText</p>

<p>onreadystatechange</p>

<p>3.ajax对象方法</p>

<p>open()</p>

<p>send()</p>

<p>setRequestHeader()</p>

<h5>4.实例代码:</h5>

<p>代码（get方式）:</p>

<pre><code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;新建网页&lt;/title&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;meta name="description" content="" /&gt;
        &lt;meta name="keywords" content="" /&gt;
        &lt;script type="text/javascript"&gt;
        function checkname(){
            //ajax负责抓取用户名信息，传递给服务器进行校验
            //获得用户名信息
            var nm = document.getElementById('username').value;
            nm = encodeURIComponent(nm);//对浏览器容易混淆的信息进行编码处理
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function(){
                if(xhr.readyState==4){
                    alert(xhr.responseText);
                }
            }
            xhr.open('get','./04.php?name='+nm);
            xhr.send(null);
        }
        &lt;/script&gt;
        &lt;style type="text/css"&gt;
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h2&gt;get方式请求&lt;/h2&gt;
        &lt;form method="post" action=""&gt;
            &lt;p&gt;用户名：&lt;input type="text" name="username" id="username" onblur="checkname()"&gt;&lt;/p&gt;
            &lt;p&gt;密码：&lt;input type="text" name="userpwd"&gt;&lt;/p&gt;
            &lt;p&gt;&lt;input type="submit" value="注册"&gt;&lt;/p&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>js代码(post方式)：</p>

<pre><code>function checkname() 
                    {
                        //ajax负责抓取用户名信息，传递给服务器进行校验
                        //获得用户名信息
                        var nm = document.getElementById('username').value;
                        nm = encodeURIComponent(nm);
                        var xhr = new XMLHttpRequest();
                        xhr.onreadystatechange = function () {
                            if (xhr.readyState == 4) {
                                alert(xhr.responseText);
                            }
                        }
                        xhr.open('post', './06.php');
                        //post模仿form表单把数据传递给服务器端
                        //form表单把数据组织为“xml格式”传递给服务器端
                        //把传递的数据组织为请求字符串
                        //以下方法设置header头信息，作用把传递的数据组织为xml格式
                        //(要在open()方法执行之后设置)
                        xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
                        var info = "name=" + nm;
                        xhr.send(info);
                     }
</code></pre>

<p>06.php
<code>
&lt;?php
header('Content-Type:text/html;charset=utf8');
$conn = mysqli_connect("localhost","root","1234567","db_liuyanben");
$sql=mysqli_query($conn,"select Username from tb_user where Username='".$_POST["name"]."'");
$sq = mysqli_fetch_array($sql, MYSQLI_BOTH);
if($_POST['name']==$sq['Username']){
    echo '正确';
}  else {
    echo '不正确';
}
</code>&mdash;
layout: post
title: &ldquo;ajax的无刷新分页显示&rdquo;
date: 2016-07-27 17:19:26 +0800
comments: true</p>

<h2>categories: [js,php,ajax]</h2>

<h5>1.两者的不同:</h5>

<p>① 给服务器传递数据量，get最多是2k
                       post原则没有限制，php.ini对其限制为8M</p>

<p>② 安全方面，post传递数据较安全</p>

<p>③ 传递数据的形式不一样
    get方式在url地址后边以请求字符串形式传递参数
    <a href="http://%E7%BD%91%E5%9D%80/index.php?name=tom&amp;age=23&amp;addr=beijing">http://%E7%BD%91%E5%9D%80/index.php?name=tom&amp;age=23&amp;addr=beijing</a>
    蓝色部分就是请求字符串，就是一些“名-值”对，中间使用&amp;符号连接。
    post方式是把form表单的数据给请求出来以xml形式传递给服务器</p>

<h5>2.处理特殊符号函数：</h5>

<p>在浏览器的地址栏里边传递一些特殊符号信息，会被误解，例如 &amp;  =  空格  中文。</p>

<p>在php里边可以函数函数 urlencode()/urldecode()对特殊符号进行编码、反编码处理
(url_encode()可以把中文转变为浏览器可以识别的信息。转变之后的信息具体为%号后接两个十六进制数)</p>

<p>在javascript里边可以通过encodeURIComponent ()对特殊符号等信息进行编码。
经过以上红色函数编码的内容在服务器端可以正常接收，不需要反编码。</p>

<h5>3.ajax总结：</h5>

<p>1.ajax对象创建</p>

<p> var xhr = new XMLHttpRequest();</p>

<p> var xhr = new ActiveXObject(‘Msxml2.XMLHTTP.6.0’);</p>

<p>2.ajax对象属性</p>

<p>readyState</p>

<p>responseText</p>

<p>onreadystatechange</p>

<p>3.ajax对象方法</p>

<p>open()</p>

<p>send()</p>

<p>setRequestHeader()</p>

<h5>4.实例代码:</h5>

<p>代码（get方式）:</p>

<pre><code>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;新建网页&lt;/title&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;meta name="description" content="" /&gt;
        &lt;meta name="keywords" content="" /&gt;
        &lt;script type="text/javascript"&gt;
        function checkname(){
            //ajax负责抓取用户名信息，传递给服务器进行校验
            //获得用户名信息
            var nm = document.getElementById('username').value;
            nm = encodeURIComponent(nm);//对浏览器容易混淆的信息进行编码处理
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function(){
                if(xhr.readyState==4){
                    alert(xhr.responseText);
                }
            }
            xhr.open('get','./04.php?name='+nm);
            xhr.send(null);
        }
        &lt;/script&gt;
        &lt;style type="text/css"&gt;
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;h2&gt;get方式请求&lt;/h2&gt;
        &lt;form method="post" action=""&gt;
            &lt;p&gt;用户名：&lt;input type="text" name="username" id="username" onblur="checkname()"&gt;&lt;/p&gt;
            &lt;p&gt;密码：&lt;input type="text" name="userpwd"&gt;&lt;/p&gt;
            &lt;p&gt;&lt;input type="submit" value="注册"&gt;&lt;/p&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>js代码(post方式)：</p>

<pre><code>function checkname() 
                    {
                        //ajax负责抓取用户名信息，传递给服务器进行校验
                        //获得用户名信息
                        var nm = document.getElementById('username').value;
                        nm = encodeURIComponent(nm);
                        var xhr = new XMLHttpRequest();
                        xhr.onreadystatechange = function () {
                            if (xhr.readyState == 4) {
                                alert(xhr.responseText);
                            }
                        }
                        xhr.open('post', './06.php');
                        //post模仿form表单把数据传递给服务器端
                        //form表单把数据组织为“xml格式”传递给服务器端
                        //把传递的数据组织为请求字符串
                        //以下方法设置header头信息，作用把传递的数据组织为xml格式
                        //(要在open()方法执行之后设置)
                        xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
                        var info = "name=" + nm;
                        xhr.send(info);
                     }
</code></pre>

<p>06.php
<code>
&lt;?php
header('Content-Type:text/html;charset=utf8');
$conn = mysqli_connect("localhost","root","1234567","db_liuyanben");
$sql=mysqli_query($conn,"select Username from tb_user where Username='".$_POST["name"]."'");
$sq = mysqli_fetch_array($sql, MYSQLI_BOTH);
if($_POST['name']==$sq['Username']){
    echo '正确';
}  else {
    echo '不正确';
}
</code></p>
]]></content>
  </entry>
  
</feed>
