<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Frame | 小黄鸡]]></title>
  <link href="http://hunter222.github.io/blog/categories/frame/atom.xml" rel="self"/>
  <link href="http://hunter222.github.io/"/>
  <updated>2016-09-04T20:31:33+08:00</updated>
  <id>http://hunter222.github.io/</id>
  <author>
    <name><![CDATA[chenjingxiu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[linux下thinkphp的Nginx配置文件]]></title>
    <link href="http://hunter222.github.io/blog/2016/08/31/Nginx-thinkphp/"/>
    <updated>2016-08-31T18:19:26+08:00</updated>
    <id>http://hunter222.github.io/blog/2016/08/31/Nginx-thinkphp</id>
    <content type="html"><![CDATA[<h5>linux下thinkphp的Nginx配置文件(亲测有效)</h5>

<p>一个配置文件，完美支持普通,兼容,pathinfo,rewrite4种url模式，常见的静态文件404时也不会再去跑一遍fastcgi浪费资源。
```
server {
    listen       80;
    server_name  thinkphp.lo;
    root /var/www;
    index  index.html index.htm index.php;</p>

<pre><code>error_page  404              /404.html;
location = /404.html {
    return 404 'Sorry, File not Found!';
}
error_page  500 502 503 504  /50x.html;
location = /50x.html {
    root   /usr/share/nginx/html; # windows用户替换这个目录
}

location / {
    try_files $uri @rewrite;
}

location @rewrite {
    set $static 0;
    if  ($uri ~ \.(css|js|jpg|jpeg|png|gif|ico|woff|eot|svg|css\.map|min\.map)$) {
        set $static 1;
    }

    if ($static = 0) {
        rewrite ^/(.*)$ /index.php?s=/$1;
    }

}

location ~ /Uploads/.*\.php$ {
    deny all;
}

location ~ \.php/ {
   if ($request_uri ~ ^(.+\.php)(/.+?)($|\?)) { }
   fastcgi_pass 127.0.0.1:9000;
   include fastcgi_params;
   fastcgi_param SCRIPT_NAME     $1;
   fastcgi_param PATH_INFO       $2;
   fastcgi_param SCRIPT_FILENAME $document_root$1;
}

location ~ \.php$ {
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
}

location ~ /\.ht {
    deny  all;
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
